# Generated by Django 5.0.6 on 2024-07-01 15:08

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CourseCategoryModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CategoryName', models.CharField(max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PendingStudentModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('BatchNo', models.CharField(max_length=100, null=True)),
                ('CourseName', models.CharField(max_length=100, null=True)),
                ('StudentName', models.CharField(max_length=100, null=True)),
                ('StudentPhoto', models.ImageField(null=True, upload_to='pendingstudentPhoto')),
                ('AdmissionDate', models.DateField(auto_now_add=True, null=True)),
                ('EducationalQualification', models.CharField(max_length=100, null=True)),
                ('FatherName', models.CharField(max_length=100, null=True)),
                ('MotherName', models.CharField(max_length=100, null=True)),
                ('Religion', models.CharField(max_length=100, null=True)),
                ('DOB', models.DateField(null=True)),
                ('Gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other')], max_length=100, null=True)),
                ('Mobile', models.CharField(max_length=100, null=True)),
                ('EmergencyContact', models.CharField(max_length=100, null=True)),
                ('PresentAddress', models.CharField(max_length=100, null=True)),
                ('PermanentAddress', models.CharField(max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='StudentModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('StudentID', models.CharField(max_length=100, null=True)),
                ('StudentName', models.CharField(max_length=100, null=True)),
                ('StudentPhoto', models.ImageField(null=True, upload_to='studentPhoto')),
                ('AdmissionDate', models.DateField(auto_now_add=True, null=True)),
                ('EducationalQualification', models.CharField(max_length=100, null=True)),
                ('LinkedInLink', models.CharField(max_length=150, null=True)),
                ('GithubLink', models.CharField(max_length=150, null=True)),
                ('FacebookLink', models.CharField(max_length=150, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TeacherModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('EmployID', models.CharField(max_length=100, null=True)),
                ('TeacherName', models.CharField(max_length=100, null=True)),
                ('Designation', models.CharField(max_length=100, null=True)),
                ('Skills', models.CharField(max_length=100, null=True)),
                ('LinkedInLink', models.CharField(max_length=150, null=True)),
                ('GithubLink', models.CharField(max_length=150, null=True)),
                ('FacebookLink', models.CharField(max_length=150, null=True)),
                ('JoinDate', models.DateField(auto_now_add=True, null=True)),
                ('TeacherPhoto', models.ImageField(null=True, upload_to='teacherphoto')),
            ],
        ),
        migrations.CreateModel(
            name='WebsiteContactModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Imsuser', models.CharField(max_length=50, null=True)),
                ('Mobile', models.CharField(max_length=50, null=True)),
                ('Address', models.CharField(max_length=100, null=True)),
                ('Email', models.CharField(max_length=100, null=True)),
                ('MapLink', models.TextField(null=True)),
                ('GithubLink', models.CharField(max_length=150, null=True)),
                ('FacebookLink', models.CharField(max_length=150, null=True)),
                ('YoutubeLink', models.CharField(max_length=150, null=True)),
                ('TwitterLink', models.CharField(max_length=150, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CourseInfoModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CourseName', models.CharField(max_length=150, null=True)),
                ('Sologan', models.CharField(max_length=100, null=True)),
                ('ShortSummary', models.CharField(max_length=150, null=True)),
                ('Lecture', models.IntegerField(null=True)),
                ('CourseDuration', models.IntegerField(null=True)),
                ('WeeklyClass', models.IntegerField(null=True)),
                ('ClassDuration', models.IntegerField(null=True)),
                ('TotalProject', models.IntegerField(null=True)),
                ('CourseOverview', models.TextField(null=True)),
                ('CourseCurrriculum', models.TextField(null=True)),
                ('Software', models.TextField(max_length=200, null=True)),
                ('CourseFor', models.TextField(null=True)),
                ('JobPositions', models.TextField(null=True)),
                ('CourseFee', models.IntegerField(null=True)),
                ('IntroVideo', models.CharField(max_length=200, null=True)),
                ('CourseImage', models.ImageField(null=True, upload_to='courseImage')),
                ('CourseCategory', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='coursecategory', to='IMSapp.coursecategorymodel')),
            ],
        ),
        migrations.CreateModel(
            name='BatchInfoModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('BatchNo', models.CharField(max_length=100, null=True)),
                ('Batchschedule', models.CharField(max_length=100, null=True)),
                ('Status', models.CharField(choices=[('On-Going', 'On-Going'), ('Upcomming', 'Upcomming'), ('Completed', 'Completed')], max_length=100, null=True)),
                ('BatchStartDate', models.DateField(null=True)),
                ('TotalStudent', models.CharField(max_length=100, null=True)),
                ('BatchInstructor', models.CharField(max_length=100, null=True)),
                ('CourseName', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='coursenameinfo', to='IMSapp.courseinfomodel')),
            ],
        ),
        migrations.CreateModel(
            name='StudentAttendanceModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Attendance', models.CharField(choices=[('Present', 'Present'), ('Absent', 'Absent')], default='Absent', max_length=20, null=True)),
                ('Date', models.DateField(null=True)),
                ('BatchNo', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='IMSapp.batchinfomodel')),
                ('Student', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='IMSapp.studentmodel')),
            ],
        ),
        migrations.CreateModel(
            name='ReviewModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Review', models.TextField(null=True)),
                ('ReviewDate', models.DateField(auto_now_add=True, null=True)),
                ('Status', models.CharField(default='Pending', max_length=50, null=True)),
                ('CourseName', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewcourseinfo', to='IMSapp.courseinfomodel')),
                ('Imsuser', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewinfo', to='IMSapp.studentmodel')),
            ],
        ),
        migrations.CreateModel(
            name='TeacherBatchModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='teacherbatch', to='IMSapp.batchinfomodel')),
                ('teacheruser', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='teacherbatchinfo', to='IMSapp.teachermodel')),
            ],
        ),
        migrations.CreateModel(
            name='TeacherAttendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Attendance', models.CharField(choices=[('Present', 'Present'), ('Absent', 'Absent'), ('Pending', 'Pending')], max_length=20, null=True)),
                ('Date', models.DateField(null=True)),
                ('date_time', models.DateTimeField(null=True)),
                ('Teacher', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='IMSapp.teachermodel')),
            ],
        ),
        migrations.CreateModel(
            name='IMSUserModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('UserType', models.CharField(choices=[('Authority', 'Authority'), ('Student', 'Student'), ('Teacher', 'Teacher'), ('Staff', 'Staff')], max_length=100, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='teachermodel',
            name='Imsuser',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='teacherinfo', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='studentmodel',
            name='Imsuser',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='studentinfo', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='StaffModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('StaffName', models.CharField(max_length=150, null=True)),
                ('EmployID', models.CharField(max_length=150, null=True)),
                ('StaffDesignation', models.CharField(max_length=150, null=True)),
                ('JoinDate', models.DateField(auto_now_add=True, null=True)),
                ('StaffPhoto', models.ImageField(null=True, upload_to='staffphoto')),
                ('Imsuser', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SalaryModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=150, null=True)),
                ('Salary', models.CharField(max_length=150, null=True)),
                ('PaymentDate', models.DateField(null=True)),
                ('Imsuser', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='salaryinfo', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PersonalInfoModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Password', models.CharField(max_length=100, null=True)),
                ('FatherName', models.CharField(max_length=100, null=True)),
                ('MotherName', models.CharField(max_length=100, null=True)),
                ('Religion', models.CharField(max_length=100, null=True)),
                ('DOB', models.DateField(null=True)),
                ('Gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other')], max_length=100, null=True)),
                ('Mobile', models.CharField(max_length=100, null=True)),
                ('EmergencyContact', models.CharField(max_length=100, null=True)),
                ('PresentAddress', models.CharField(max_length=100, null=True)),
                ('PermanentAddress', models.CharField(max_length=100, null=True)),
                ('Imsuser', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='personalinfo', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AdmittedCourseModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('StudentID', models.CharField(max_length=150, null=True)),
                ('CourseFee', models.CharField(max_length=150, null=True)),
                ('Payment', models.CharField(max_length=150, null=True)),
                ('Due', models.CharField(max_length=150, null=True)),
                ('AdmissionDate', models.DateField(auto_now_add=True, null=True)),
                ('LearningBatch', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='batchinfo', to='IMSapp.batchinfomodel')),
                ('CourseName', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='courseinfo', to='IMSapp.courseinfomodel')),
                ('Studentuser', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='studetinfo', to='IMSapp.studentmodel')),
                ('Courseuser', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='admittedcourseinfo', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
